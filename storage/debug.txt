<!DOCTYPE html>
<html>
<style>
    html {
        font-family: Arial;
        display: inline-block;
        margin: 0px auto;
        text-align: center;
        font-size: x-large;
    }

    h1 {
        color: #070812;
        padding: 2vh;
    }

    .button {
        display: inline-block;
        background-color: #b30000;
        border: none;
        border-radius: 4px;
        color: white;
        padding: 16px 40px;
        text-decoration: none;
        font-size: 30px;
        margin: 2px;
        cursor: pointer;
        font-size: x-large;
    }

    .button2 {
        background-color: #364cf4;
    }

    .content {
        padding: 50px;
    }

    .card-grid {
        max-width: 400px;
        margin: 0 auto;
        display: grid;
        grid-gap: 2rem;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    .card {
        background-color: white;
        box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);








/* 
    int response;
    char* responseDataPtr = get_web_server_file(req->uri);
    char responseData[5000];
    strcpy(responseData, responseDataPtr);
//    char reponseDataUpdated[strlen(responseData) + 500];
    char reponseDataUpdated[5000];
    sprintf(reponseDataUpdated, responseData, iot_wifi_conf.ssid, iot_wifi_conf.passwd);
    printf("-----------------------------------------\n");
    response = httpd_resp_send(req, reponseDataUpdated, HTTPD_RESP_USE_STRLEN);
//    sprintf(response_data, index_html, iot_wifi_conf.ssid, iot_wifi_conf.passwd);
//    response = httpd_resp_send(req, response_data, HTTPD_RESP_USE_STRLEN);
    //free responseData;
    return response;
 */    







 char* get_web_server_file(const char* uri)
{
    //This should not be needed.
    //memset((void *)fileData, 0, sizeof(fileData));

    struct stat st;
    if (stat(INDEX_HTML_PATH, &st))
    {
        ESP_LOGE(TAG, "index.html not found");
        return NULL;
    }
    char* fileData = malloc((size_t)st.st_size);
    char* filePath = NULL;
    const char slash = '/';
    if(fileData[strlen(fileData)-1 == slash]) {
        filePath = concat("/spiffs", concat(uri, "index.html"));
    } else {
        filePath = concat("/spiffs", uri);
    }

    FILE *fp = fopen(filePath, "r");
    if (fread(fileData, st.st_size, 1, fp) == 0)
    {
        ESP_LOGE(TAG, "fread failed");
    }
    fclose(fp);

    return fileData;
}

